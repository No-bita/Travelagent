version: '3.8'

services:
  # Main API Service
  api:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=production
      - AMADEUS_API_KEY=${AMADEUS_API_KEY}
      - AMADEUS_API_SECRET=${AMADEUS_API_SECRET}
      - REDIS_URL=redis://redis:6379/0
      - POSTGRES_DSN=postgresql://travel_user:travel_password@postgres:5432/travelagent
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
    depends_on:
      - redis
      - postgres
    restart: unless-stopped
    volumes:
      - ./backend:/app
    networks:
      - travel_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis for Session Management
  redis:
    image: redis:7-alpine
    container_name: travelagent_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - travel_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: redis-server --appendonly yes

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: travelagent_postgres
    environment:
      - POSTGRES_DB=travelagent
      - POSTGRES_USER=travel_user
      - POSTGRES_PASSWORD=travel_password
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    networks:
      - travel_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U travel_user -d travelagent"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: travelagent_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - api
    restart: unless-stopped
    networks:
      - travel_network

volumes:
  redis_data:
    driver: local
  postgres_data:
    driver: local

networks:
  travel_network:
    driver: bridge
